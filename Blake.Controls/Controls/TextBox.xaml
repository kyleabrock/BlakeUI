<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Blake.Controls.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Images.xaml" />
    </ResourceDictionary.MergedDictionaries>
	
	<ControlTemplate x:Key="TextBoxErrorTemplate">
		<StackPanel Orientation="Horizontal">
			<Border BorderThickness="1" BorderBrush="#FFdc000c" CornerRadius="0.7" VerticalAlignment="Top">
				<Grid>
					<Polygon x:Name="ToolTipCorner"
							Grid.ZIndex="2"
							Margin="-1"
							Points="6,6,6,0,0,0"
							Fill="#FFdc000c"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							IsHitTestVisible="True" />
					<Polygon Grid.ZIndex="3"
							Points="7,7,0,0"
							Margin="-1"
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							StrokeThickness="1.5"
							StrokeEndLineCap="Round"
							StrokeStartLineCap="Round"
							Stroke="White"
							IsHitTestVisible="True" />
					<AdornedElementPlaceholder x:Name="adorner" />					
				</Grid>
			</Border>
			
		</StackPanel>
	</ControlTemplate>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{StaticResource DefaultTextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource DefaultBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="FontFamily" Value="Segoe UI" />		
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <ScrollViewer Margin="4,2" x:Name="PART_ContentHost"
                                              TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                              TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontWeight="{TemplateBinding FontWeight}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                    	<Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource BorderFocusedColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBoxBase.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.200"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource BorderDefaultColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBoxBase.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.200"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BootstrapGrayColor5}" />
                            <Setter Property="Foreground" Value="{StaticResource BootstrapGrayColor4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxWatermarkStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
        <Setter Property="local:WaterMarkTextHelper.WatermarkText" Value="Логин" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="EnterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" To=".1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderFocusedColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderDefaultColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>

                        <Storyboard x:Key="EnterHasTextGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" From=".1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderFocusedColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitHasTextGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderDefaultColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(PasswordBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>

                        <Storyboard x:Key="EnterHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From=".1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitHasText" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid>
                                <ScrollViewer Margin="4,0" x:Name="PART_ContentHost" VerticalAlignment="Center" 
                                              TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                              TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontWeight="{TemplateBinding FontWeight}" />
                                <TextBlock x:Name="Message" FontStyle="{TemplateBinding FontStyle}"
                                           Text="{TemplateBinding local:WaterMarkTextHelper.WatermarkText}" 
                                           Foreground="{StaticResource BootstrapGrayColor4}" IsHitTestVisible="False" FontFamily="{TemplateBinding FontFamily}"
                                           Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BootstrapGrayColor5}" />
                            <Setter Property="Foreground" Value="{StaticResource BootstrapGrayColor4}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:WaterMarkTextHelper.HasText" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterHasTextGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHasTextGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
        <Setter Property="local:WaterMarkTextHelper.WatermarkText" Value="Логин" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="EnterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" To=".1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderFocusedColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderDefaultColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>

                        <Storyboard x:Key="EnterHasTextGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" From=".1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderFocusedColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(TextBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitHasTextGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                            <ColorAnimation To="{StaticResource BorderDefaultColor}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(PasswordBox.BorderBrush).(SolidColorBrush.Color)"
                                                            Duration="00:00:00.050"/>
                        </Storyboard>

                        <Storyboard x:Key="EnterHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From=".1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="ExitHasText" >
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid>
                                <ScrollViewer Margin="32,0,4,0" x:Name="PART_ContentHost" VerticalAlignment="Center" 
                                              TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                              TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontWeight="{TemplateBinding FontWeight}" />
                                
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource LoginBitmapImage}" Width="16" Height="16" Margin="8,0" />
                                    <TextBlock x:Name="Message" FontStyle="{TemplateBinding FontStyle}"
                                           Text="{TemplateBinding local:WaterMarkTextHelper.WatermarkText}" 
                                           Foreground="{StaticResource BootstrapGrayColor4}" IsHitTestVisible="False" FontFamily="{TemplateBinding FontFamily}"
                                           Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BootstrapGrayColor5}" />
                            <Setter Property="Foreground" Value="{StaticResource BootstrapGrayColor4}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:WaterMarkTextHelper.HasText" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterHasTextGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHasTextGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource EnterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>